#Each new item in the FIbaonaccu sequence is generated by adding the previus two terms. By starting with 1 and 2 the first 10 items will be 
#    1,2,3,4,8,13,21,34,55,89...
# bby considering the utems in the fibonacci sequence whose values do not eweed 4 milions. find the sum of the event valued items.


defmodule PB2 do

  @max 4_000_000
  #@max 89

  def sumfib, do: _sumfib( { 2,1 }, 0 )

  def _sumfib( { n1,n2}, acc ) when rem( n1, 2) != 0,
  do: _sumfib( {n1+n2, n1}, acc  )

  def _sumfib( { n1 , _n2 }, acc ) when n1 >= @max,
  do: acc

  def _sumfib( { n1, n2 }, acc ) do
    _sumfib( { n1+n2,n1 }, acc + n1 )
  end

end

PB2.sumfib |> IO.puts

Report.time(PB2, :sumfib , [] )
#REP: 4613732
